
Imię: [Adrian]
Nazwisko: [Kita]
Numer albumu: [29568]
Github: [github.com/AdulX]
# --------------------------------------------------------
# Zadanie.12 
#
# W R dostępne są zbiory WWWusage, presidents oraz mdeaths. Wczytaj je i dokonaj eksploracji danych.
# Sprawdź czy są to zbiory typu "time series". Opisz jakich okresów dotyczą dane oraz jakim okresom 
# czasu odpowiadają poszczególne obserwacje. Sporządź również wykresy liniowe obrazujące te szeregi czasowe.
#
# Pełne rozwiązanie tego zadania musi zawierać dla każdego zbioru: 
#	- Twój kod R, 
#	- Twój opis i interprację szeregów czasowych,
# - czytelną wizualizację na wykresach. 
#
# --------------------------------------------------------
# tu wpisz swój kod: 
#
#
# Zbiór 'WWWusage'
data(WWWusage)
is.ts(WWWusage)
plot(WWWusage, main = 'WWWusage', xlab = 'czas[min]', ylab = 'ilość osób połączonych z internetem')
#
# Zbiór WWWusage jest zbiorem typu 'time series'. 
# Wykres pokazuję liczbę osób połaczonych z internetem przez serwer w danej minucie
#
#
# Zbiór 'presidents'
data(presidents)
is.ts(presidents)
plot(presidents, main = 'Kwartalne poparcie dla prezydentów USA w latach 1945 - 1974', xlab = 'Rok', ylab = '% poparcia')
#
# Zbiór presidents jest zbiorem typu 'time series'.
# Wykres przedstawia % poparcia prezydentów USA mierzony kwartalnie w latach 1945 - 1975
# Przerwana linia wykresu oznacza brak danych ('NA')
#
#
# Zbiór 'mdeaths'
data(mdeaths)
is.ts(mdeaths)
plot(mdeaths, main = 'Liczba zgonów mężczyzn spowodowanych chorobami płuc w UK', xlab = 'Rok', ylab = 'Ilość zgonów')
#
# Zbiór mdeaths jest zbiorem typu 'time series'
# Zbiór mdeaths przedstawia iloć zgonów mężczyzn w UK spowodowanych chorobami płuc
# Dane mierzone co miesiąc w latach 1974 - 1978
#
#
#
# --------------------------------------------------------
# Zadanie.13
#
# Dostępny jest zbiór danych prezentujących liczbę małżeństw (v1). Prezentuje on dane za okres od stycznia
# 2009 do grudnia 2011. Dokonaj jego dekompozycji. Wybierz właściwy typ modelu wahań w czasie. Wykreśl
# wyniki. Odpowiedz na pytania:
#
# W których miesiącach jest najwyższy dodatni poziom wahań sezonowych, 
# a w których jest najniższy? Uzasadnij odpowiedź i zinterpretuj wyniki.
#  
# O ile procent w każdym miesiącu wskaźniki sezonowości odchylają się od średniej dla danego miesiąca?
#
# --------------------------------------------------------
# tu wpisz swój kod: 
	v1 <-  c(10.8, 12.9, 4.7, 28.1, 6.1, 23.1, 20.2, 23.7, 30.4, 24.6, 7.7, 14.8,
			   10.2, 10.9, 4.9, 27.3, 6.0, 27.6, 16.7, 28.3, 26.7, 24.8, 8.2, 12.9,
				9.8,  7.9, 8.1, 25.7, 6.3, 25.2, 18.8, 29.6, 26.2, 26.1, 8.3, 12.9)

ts_v1 <- ts(v1, start = c(2009, 1), end = c(2011, 12), frequency = 12)

decomposed_ts <- decompose(ts_v1)

plot(decomposed_ts)

max_seasonal_month <- which.max(decomposed_ts$seasonal) #Wrzesień
min_seasonal_month <- which.min(decomposed_ts$seasonal) #Maj

cat("Miesiąc z najwyższym poziomem wahań sezonowych: ", month.name[max_seasonal_month], "\n")
cat("Miesiąc z najniższym poziomem wahań sezonowych: ", month.name[min_seasonal_month], "\n")

procent_odchylenia <- (decomposed_ts$seasonal - mean(decomposed_ts$seasonal)) / mean(decomposed_ts$seasonal) * 100
print(procent_odchylenia)

# --------------------------------------------------------
# Zadanie.14
#
# W pakiecie ISLR dostępny jest zbiór "Auto "z informacją o różnych modelach samochodów.
# Zapoznaj się ze znaczeniem zmiennych zbioru. Dokonaj eksploracji zbioru za pomocą
# poznanych funkcji (np. head, summary, itd.).
#
# Utwórz model1 regresji liniowej ze zmienną mpg jako objaśnianą a horsepower jako objaśniającą.
# Zastanów się co zawierają zmienne i czy istnieje związek przyczynowo-skutkowy. 
# Zinterpretuj zmienne i uzasadnij związek.
# 
# Dokonaj analizy parametrów modelu za pomocą funkcji summary(). Na podstawie je wyników odpowiedz 
# na następujace pytania:
# a) Czy istnieje związek pomiędzy zmienną objaśniającą a objaśnianą?
# b) Jak można interpretować wartość współczynnika regresji?
# c) Jaką liczbę mil per galon paliwa model przewiduje dla 98 koni mechanicznych? 
# {wskazówka: użyj funkcji predict z argumentem interval="conficence"
# d) utwórz wykres rozrzutu dla tych dwóch zmiennych; dodaj linię regresji za pomocą funkcji "abline"
# e) użyj funkcji "plot", żeby obejrzeć wykresy diagnostyczne
#
# Spróbuj stworzyć model dla większej liczby zmiennych. 
# Najpierw stwórz macierz korelacji dla zmiennych numerycznych używająch funkcji cor(). 
# (pamiętaj, że w argumencie funkcji cor powinny być dane bez zmiennych kategorycznych)
# f) które zmienne numeryczne są silnie skorelowane ze zmienną objaśnianą?
#
# Stwórz teraz model2 oparty na wszystkich zmiennych.
# g) Które zmienne są powiązane ze zmienną objaśnianą (mpg) w statystycznie istotnym stopniu?
# h) Jak można interpretować współczynnik przy zmiennej "year"?
#
# Porównaj modele ze względu na wartość R kwadrat 
# i stwórz wykresy diagnostyczne dla obu modeli.

	?Auto

#
# --------------------------------------------------------
# tu wpisz swój kod: 

install.packages('ISLR')
library(ISLR)
data(Auto)
summary(Auto)
View(Auto)

model1 = lm(mpg ~ horsepower, data = Auto)
summary(model1) 


predict(model1, newdata = data.frame(horsepower = 98), interval = "confidence") #około 24.5 mpg
plot(Auto$horsepower, Auto$mpg) 
abline(model1) #Zależność - czym wyższa moc silika, tym mniejszy dystans pokonany na jednym galonie paliwa


cor_matrix = cor(Auto[, sapply(Auto, is.numeric)])
model2 = lm(mpg ~ ., data = Auto)



plot(Auto$cylinders, Auto$mpg) #Brak Zależności
plot(Auto$displacement, Auto$mpg) #Zależność - czym wyższy 'displacement', tym mniejszy dystans pokonany na jednym galonie paliwa
plot(Auto$weight, Auto$mpg) #Zależność - czym wyższa masa, tym mniejszy dystans pokonany na jednym galonie paliwa
plot(Auto$acceleration, Auto$mpg) #Brak Zależności
plot(Auto$year, Auto$mpg) #Brak Zależności
plot(Auto$origin, Auto$mpg) #Brak Zależności


# --------------------------------------------------------
# Zadanie.15
#
# Wygeneruj 1000-elementowy wektor z rozkładu Poisonna z parametrem lambda=6. Policz dla tego wektora:
# - średnią, 
# - rozstęp, 
# - wariancję, 
# - kwartyle, 
# - rozstęp międzykwartylowy, 
# - kurtozę, 
# - skośność ,
# - oraz dominantę.
# Zwizualizuj wektor za pomocą histogramu oraz wykresu pudełkowego (użyj kolorów, ustaw tytuły osi, wykresu).
# Jak mają się do siebie średnia, mediana i dominanta?
# Wygeneruj ponownie losowy wektor (korzystając z tej samej komendy) i uruchom ponownie napisane komendy. 
# Czy są wyraźne różnice?


#
# --------------------------------------------------------
# tu wpisz swój kod: 

install.packages("moments")
library(moments)
set.seed(123)

data = rpois(1000, lambda = 6)

srednia = mean(data) 
zakres = range(data) 
wariancja = var(data) 
kwartyle = quantile(data)

rozstep = IQR(data) 
kurtoza = kurtosis(data) 
skosnosc = skewness(data) 
dominanta = as.numeric(names(which.max(table(data)))) 
mediana = median(data) 

# Średnia i mediana wykazują bardzo podobne wartości, natomiast dominanta jest niższa.

hist(data, col = "orange", main = 'Histogram', ylab = 'Ilość wystąpień', xlab = "Liczba")
boxplot(data, col = "darkblue", main = 'Boxplot')

data2 = rpois(1000, lambda = 6)

srednia2 = mean(data2)
dominanta2 = as.numeric(names(which.max(table(data2))))
mediana2 = median(data2)
# Różnice są niewielkie